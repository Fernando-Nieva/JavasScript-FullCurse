let myObj={

    nombre:'fernando',
    saludar(){
        console.log(`Hola ${this.nombre}`);
    }
};

myObj.saludar();


function checkthis() {
    'use strict';
  console.log(this);
}
checkthis();


//lexical this
function Boy() {
    this.edad = 0;
    setInterval(() => {
        this.edad++}, 1000);
}
let juanito = new Boy();



// 1Ô∏è‚É£ THIS EN UN OBJETO
'use strict';
const persona = {
  nombre: 'Fernando',
  saludar: function () {
    console.log('1Ô∏è‚É£ Hola, soy ' + this.nombre); // üëâ 'this' apunta al objeto persona
  }
};
persona.saludar(); // ‚úÖ "Hola, soy Fernando"

// 2Ô∏è‚É£ THIS EN UNA FUNCI√ìN NORMAL (MODO ESTRICTO)
function mostrarThis() {
    'use strict';
  console.log('2Ô∏è‚É£', this); // üëâ undefined en modo estricto
}
mostrarThis(); // ‚ö†Ô∏è undefined

// 3Ô∏è‚É£ THIS EN UNA FUNCI√ìN FLECHA

'use strict';
const flecha = () => {
    
    console.log('3Ô∏è‚É£', this); // üëâ hereda el 'this' del entorno exterior (ac√°, probablemente window o undefined)
};
flecha(); // ‚ö†Ô∏è window o undefined

// 4Ô∏è‚É£ THIS EN UN CONSTRUCTOR
function Auto(marca) {
  this.marca = marca;
  this.mostrar = function () {
    console.log('4Ô∏è‚É£ Auto: ' + this.marca); // üëâ 'this' es el nuevo objeto creado
  };
}
const miAuto = new Auto('Toyota');
miAuto.mostrar(); // ‚úÖ "Auto: Toyota"

// 5Ô∏è‚É£ THIS PERDIDO Y RECUPERADO CON BIND
const saludo = persona.saludar;
saludo(); // ‚ö†Ô∏è undefined (pierde el 'this')
const saludoBien = persona.saludar.bind(persona);
saludoBien(); // ‚úÖ "Hola, soy Fernando"

